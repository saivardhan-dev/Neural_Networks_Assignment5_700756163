# -*- coding: utf-8 -*-
"""NNDL.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1drptW_sDHaC2hITykxa0U5XIzvj15dTF

# New Section
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report



df = pd.read_csv("/content/glass.csv")

df.head()

X = df.drop('Type', axis=1)
y = df['Type']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

naive_bayes_model = GaussianNB()


naive_bayes_model.fit(X_train, y_train)


y_pred = naive_bayes_model.predict(X_test)

accuracy = accuracy_score(y_test, y_pred)
classification_report_output = classification_report(y_test, y_pred)

print(f"Accuracy: {accuracy}")
print("\nClassification Report:\n", classification_report_output)

"""question-2"""

from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report
import pandas as pd


X = df.drop('Type', axis=1)
y = df['Type']


X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

svm_model = SVC(kernel='linear')

svm_model.fit(X_train, y_train)

y_pred_svm = svm_model.predict(X_test)

accuracy_svm = accuracy_score(y_test, y_pred_svm)
classification_report_svm = classification_report(y_test, y_pred_svm)

print("Linear SVM:")
print(f"Accuracy: {accuracy_svm}")
print("\nClassification Report:\n", classification_report_svm)